[{"/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/reportWebVitals.js":"1","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/containers/HomePage.js":"2","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/containers/ManageAccountPage.js":"3","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/components/ChatFeed.js":"4","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/components/AgreementsList.js":"5","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/components/NewGoalModal.js":"6","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/containers/TrainingAgreementsPage.js":"7","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/components/ChatFeedNav.js":"8","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/actions/user.js":"9","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/reducers/agreements.js":"10","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/components/LoginForm.js":"11","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/components/NewTrainingSessionModal.js":"12","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/containers/LoginPage.js":"13","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/index.js":"14","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/components/NavBar.js":"15","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/actions/agreements.js":"16","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/components/TrainingSessionModal.js":"17","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/reducers/user.js":"18","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/App.js":"19"},{"size":362,"mtime":1610644949310,"results":"20","hashOfConfig":"21"},{"size":1798,"mtime":1612905854290,"results":"22","hashOfConfig":"21"},{"size":1045,"mtime":1611696458395,"results":"23","hashOfConfig":"21"},{"size":4917,"mtime":1611861036161,"results":"24","hashOfConfig":"21"},{"size":4187,"mtime":1611366612421,"results":"25","hashOfConfig":"21"},{"size":6271,"mtime":1611277514601,"results":"26","hashOfConfig":"21"},{"size":1610,"mtime":1611191005313,"results":"27","hashOfConfig":"21"},{"size":5261,"mtime":1612910517058,"results":"28","hashOfConfig":"21"},{"size":294,"mtime":1611257742739,"results":"29","hashOfConfig":"21"},{"size":2463,"mtime":1611605041310,"results":"30","hashOfConfig":"21"},{"size":2011,"mtime":1611616056251,"results":"31","hashOfConfig":"21"},{"size":12332,"mtime":1612910276136,"results":"32","hashOfConfig":"21"},{"size":5199,"mtime":1612910276136,"results":"33","hashOfConfig":"21"},{"size":1041,"mtime":1612910282672,"results":"34","hashOfConfig":"21"},{"size":1905,"mtime":1611528385541,"results":"35","hashOfConfig":"21"},{"size":1070,"mtime":1611605041303,"results":"36","hashOfConfig":"21"},{"size":12738,"mtime":1612910276136,"results":"37","hashOfConfig":"21"},{"size":591,"mtime":1611257742742,"results":"38","hashOfConfig":"21"},{"size":3638,"mtime":1612910163283,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"2hgwbj",{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/reportWebVitals.js",[],["84","85"],"/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/containers/HomePage.js",["86","87","88","89"],"import React, { useState, useEffect } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Image from 'react-bootstrap/Image'\nimport { connect } from 'react-redux';\nimport { Link, useHistory } from \"react-router-dom\";\nimport PlaceholderImage from '../components/PlaceholderImage';\n\nconst HomePage = ({ user, agreements }) => {\n\n    // const [ notifications, setNotifications ] = useState([])\n\n    // useEffect(() => {\n    //     // CONVERT AGREEMENTS INTO ARRAY OF NOTIFICATION OBJECTS, ADD TO NOTIFICATION STATE OBJECT\n    // })\n\n    // const reduceAgreementToNotification = agreement => {\n    //     case () {\n\n    //     }\n    // }\n\n    return (\n        <Container id='home-page' className='d-flex align-items-center flex-column'>\n            {   !!user.imageUrl ? \n                <Image className='shadow homepage-image' src={ user.imageUrl } /> : \n                <PlaceholderImage size='8rem' /> \n            }\n            <h1 className='.welcome-message'>{ `Welcome, ${ user.name }!` }</h1>\n            {/* <Container className='d-flex justify-content-center'>\n                <div className='nav-link-container d-flex justify-content-end'>\n                    <Link to='/manage-account'>User Settings</Link>\n                </div>\n                <div className='v-divider' />\n                <div className='nav-link-container d-flex justify-content-start'>\n                    <Link to='/training-agreements'>\n                        { user.isTrainer ? 'View Roster' : 'View Coaches' }\n                    </Link>\n                </div>\n            </Container> */}\n        </Container>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user,\n        agreements: state.agreements\n    }\n}\n\nexport default connect(mapStateToProps)(HomePage);\n",["90","91"],"/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/containers/ManageAccountPage.js",[],"/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/components/ChatFeed.js",["92"],"/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/components/AgreementsList.js",["93"],"/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/components/NewGoalModal.js",[],"/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/containers/TrainingAgreementsPage.js",["94"],"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport AgreementsList from '../components/AgreementsList';\nimport AgreementDetails from '../components/AgreementDetails';\nimport NewTrainingAgreement from '../components/NewTrainingAgreement';\n\nconst TrainingAgreementsPage = ({ user, agreements }) => {\n    \n    // STATE HOOKS FOR AGREEMENT DETAILS PAGE\n    const [ activeAgreement, setActiveAgreement ] = useState(null)\n    const [ showNewTrainingAgreement, setShowNewTrainingAgreement ] = useState(false)\n\n    const currentAgreement = () => agreements.find(agreement => agreement.id === activeAgreement)\n    \n    return (\n        <div id='agreements-roster-page' className='d-flex justify-content-stretch'>\n            <AgreementsList \n                userIsTrainer={ user.isTrainer }\n                agreements={ agreements }\n                activeAgreement={ activeAgreement }\n                setActiveAgreement={ setActiveAgreement }\n                showNew={ showNewTrainingAgreement }\n                setShowNew={ setShowNewTrainingAgreement }\n            />\n            { showNewTrainingAgreement ? \n                <NewTrainingAgreement \n                    closeTrainingAgreement={ () => setShowNewTrainingAgreement(false) }\n                /> :\n                <AgreementDetails userIsTrainer={ user.isTrainer } agreement={ currentAgreement() } />}\n        </div>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user,\n        agreements: state.agreements\n    }\n}\n\nexport default connect(mapStateToProps)(TrainingAgreementsPage);",["95","96"],"/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/components/ChatFeedNav.js",["97","98"],"import React, { useState, useEffect, createContext, useRef } from 'react';\n// REACT BOOTSTRAP\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport NavDropdown from 'react-bootstrap/NavDropdown'\nimport Toast from 'react-bootstrap/Toast';\n// COMPONENT DEPENDENCIES\nimport ChatFeed from './ChatFeed';\nimport ChatUser from './ChatUser';\nimport PlaceholderImage from './PlaceholderImage';\n// ACTION CABLE!\nimport actionCable from 'actioncable';\n\nconst CableApp = {}\nCableApp.cable = actionCable.createConsumer('ws://quick-trainer-backend.herokuapp.com/cable')\nexport const ActionCableContext = createContext()\n\nconst ChatFeedNav = ({ user, agreements }) => {\n\n    const [ activeFeed, setActiveFeed ] = useState({})\n    const [ chatrooms, setChatrooms ] = useState([])\n    const [ showFeed, setShowFeed ] = useState(false)\n    const [ notifications, setNotifications ] = useState([])\n    const notificationsRef = useRef([])\n\n    useEffect(() => {\n        const formattedAgreements = mapAgreementsToChatrooms()\n        setChatrooms([...formattedAgreements])\n    },[ agreements ])\n\n    const userIsTrainer = () => {\n        return user.isTrainer\n    }\n\n    const mapAgreementsToChatrooms = () => {\n        return agreements.map( agreement => {\n            return {\n                id: agreement.id,\n                chatUser: userIsTrainer() ? agreement.client.name : agreement.trainer.name,\n                chatUserImg: userIsTrainer() ? agreement.client.image_url : agreement.trainer.image_url\n            }\n        })\n    }\n\n    const renderDropdownItemsFromState = () => {\n        return chatrooms.map( (room, i) => { \n            return <ChatUser\n                key={ i }\n                event={ () => setAsCurrentFeed(room) }\n                active={ room.id === activeFeed.id }\n                showFeed={ showFeed }\n                agreement={ room }\n                addNewMessageToast={ addNewMessageToast }\n            />\n        })\n    }\n\n    const renderChatfeedFromState = () => {\n        if (!activeFeed.id) return\n        else return (\n            <Nav.Link active={ showFeed } onClick={ toggleChatView }>{ activeFeed.chatUser }</Nav.Link>\n        )\n    }\n\n    const setAsCurrentFeed = room => {\n        if (activeFeed.id === room.id) setActiveFeed({})\n        else setActiveFeed(room)\n        setShowFeed(false)\n    }\n\n    const toggleChatView = e => {\n        setShowFeed(!showFeed)\n    }\n\n    const addNewMessageToast = (chatMessage, agreement) => {\n        const newNotification = {\n            ...chatMessage,\n            chatUser: agreement.chatUser,\n            chatUserImg: agreement.chatUserImg\n        }\n        setNotifications([...notificationsRef.current, newNotification])\n        notificationsRef.current.push(newNotification)\n    }\n\n    const renderToastNotifications = () => {\n        return notifications.map( notification => {\n            return <ToastNotification \n                key={ notification.id }\n                notification={ notification } \n                removeToast={ removeToast }\n            />\n        })\n    }\n\n    const removeToast = id => {\n        const newNotifications = notificationsRef.current.filter(ref => ref.id !== id)\n        notificationsRef.current = newNotifications\n        setNotifications([...newNotifications])\n    }\n\n    return (\n        <ActionCableContext.Provider value={ CableApp.cable }>\n           <Navbar id='chatfeed-nav'fixed='bottom' variant='dark'>\n                <Navbar.Collapse id='chatfeed-nav-items'className=\"justify-content-end\">\n                    <Nav>\n                        { renderChatfeedFromState() }\n                        <NavDropdown title={ user.isTrainer ? 'Clients' : 'Coaches' } id=\"nav-dropdown\" drop='up' alignRight>\n                            { renderDropdownItemsFromState() }\n                        </NavDropdown>\n                    </Nav>\n                </Navbar.Collapse>\n                { showFeed ? <ChatFeed \n                    userId={ user.id } \n                    feed={ activeFeed } \n                    showFeed={ showFeed }\n            /> : null }\n            </Navbar>\n            <div \n                id='toast-notification-container' \n                className='d-flex flex-column-reverse align-items-end justify-content-end'\n            >\n                { renderToastNotifications() }\n            </div>\n        </ActionCableContext.Provider>\n        \n    );\n}\n\nconst ToastNotification = ({ notification, removeToast }) => {\n\n    const [ show, setShow ] = useState(true)\n    const { content, id, chatUser, chatUserImg } = notification\n\n    const closeToastNotification = () => {\n        setShow(false)\n        removeToast(id)\n    }\n\n    return (\n        <Toast \n            onClose={ closeToastNotification }\n            show={ show }\n            delay={ 5000 }\n            autohide\n            style={{ minWidth: '220px', flexBasis: 'auto' }}\n        >\n            <Toast.Header>\n                <img src={ chatUserImg } className=\"rounded mr-2\" alt=\"\" />\n                <strong className=\"mr-auto\">{ chatUser }</strong>\n                <small>New Message</small>\n            </Toast.Header>\n            <Toast.Body>{ content }</Toast.Body>\n        </Toast>\n    )\n}\n\nexport default ChatFeedNav;\n","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/actions/user.js",[],"/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/reducers/agreements.js",[],"/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/components/LoginForm.js",[],"/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/components/NewTrainingSessionModal.js",["99"],"/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/containers/LoginPage.js",["100","101"],"/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/index.js",["102"],"/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/components/NavBar.js",[],"/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/actions/agreements.js",[],"/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/components/TrainingSessionModal.js",["103"],"/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/reducers/user.js",[],"/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/App.js",["104"],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"113","line":1,"column":27,"nodeType":"111","messageId":"112","endLine":1,"endColumn":36},{"ruleId":"109","severity":1,"message":"114","line":5,"column":10,"nodeType":"111","messageId":"112","endLine":5,"endColumn":14},{"ruleId":"109","severity":1,"message":"115","line":5,"column":16,"nodeType":"111","messageId":"112","endLine":5,"endColumn":26},{"ruleId":"105","replacedBy":"116"},{"ruleId":"107","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":38,"column":8,"nodeType":"120","endLine":38,"endColumn":14,"suggestions":"121"},{"ruleId":"118","severity":1,"message":"122","line":11,"column":8,"nodeType":"120","endLine":11,"endColumn":22,"suggestions":"123"},{"ruleId":"109","severity":1,"message":"113","line":1,"column":27,"nodeType":"111","messageId":"112","endLine":1,"endColumn":36},{"ruleId":"105","replacedBy":"124"},{"ruleId":"107","replacedBy":"125"},{"ruleId":"109","severity":1,"message":"126","line":10,"column":8,"nodeType":"111","messageId":"112","endLine":10,"endColumn":24},{"ruleId":"118","severity":1,"message":"127","line":29,"column":7,"nodeType":"120","endLine":29,"endColumn":21,"suggestions":"128"},{"ruleId":"118","severity":1,"message":"129","line":223,"column":8,"nodeType":"120","endLine":223,"endColumn":23,"suggestions":"130"},{"ruleId":"109","severity":1,"message":"131","line":8,"column":8,"nodeType":"111","messageId":"112","endLine":8,"endColumn":18},{"ruleId":"118","severity":1,"message":"132","line":30,"column":7,"nodeType":"120","endLine":30,"endColumn":9,"suggestions":"133"},{"ruleId":"109","severity":1,"message":"134","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":30},{"ruleId":"118","severity":1,"message":"135","line":29,"column":7,"nodeType":"120","endLine":29,"endColumn":11,"suggestions":"136"},{"ruleId":"118","severity":1,"message":"137","line":23,"column":5,"nodeType":"120","endLine":23,"endColumn":7,"suggestions":"138"},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Link' is defined but never used.","'useHistory' is defined but never used.",["139"],["140"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cable.subscriptions'. Either include it or remove the dependency array.","ArrayExpression",["141"],"React Hook useEffect has missing dependencies: 'filterActiveAgreements' and 'filterPendingAgreements'. Either include them or remove the dependency array.",["142"],["139"],["140"],"'PlaceholderImage' is defined but never used.","React Hook useEffect has a missing dependency: 'mapAgreementsToChatrooms'. Either include it or remove the dependency array.",["143"],"React Hook useEffect has missing dependencies: 'index' and 'updateWorkoutItem'. Either include them or remove the dependency array. If 'updateWorkoutItem' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["144"],"'ErrorModal' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["145"],"'createContext' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchTrainingSessionData'. Either include it or remove the dependency array.",["146"],"React Hook useEffect has missing dependencies: 'fetchUserToStore' and 'user'. Either include them or remove the dependency array.",["147"],"no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},"Update the dependencies array to be: [cable.subscriptions, feed]",{"range":"162","text":"163"},"Update the dependencies array to be: [agreements, filterActiveAgreements, filterPendingAgreements]",{"range":"164","text":"165"},"Update the dependencies array to be: [agreements, mapAgreementsToChatrooms]",{"range":"166","text":"167"},"Update the dependencies array to be: [index, updateWorkoutItem, workoutItem]",{"range":"168","text":"169"},"Update the dependencies array to be: [history]",{"range":"170","text":"171"},"Update the dependencies array to be: [fetchTrainingSessionData, id]",{"range":"172","text":"173"},"Update the dependencies array to be: [fetchUserToStore, user]",{"range":"174","text":"175"},[1205,1211],"[cable.subscriptions, feed]",[452,466],"[agreements, filterActiveAgreements, filterPendingAgreements]",[1093,1107],"[agreements, mapAgreementsToChatrooms]",[8552,8567],"[index, updateWorkoutItem, workoutItem]",[1067,1069],"[history]",[1123,1127],"[fetchTrainingSessionData, id]",[998,1000],"[fetchUserToStore, user]"]