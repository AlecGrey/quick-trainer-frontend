[{"/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/App.js":"1","/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/reportWebVitals.js":"2","/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/components/TestForm.js":"3","/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/index.js":"4","/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/components/LoginForm.js":"5","/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/components/MainLogo.js":"6","/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/actions/user.js":"7","/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/reducers/user.js":"8","/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/reducers/index.js":"9","/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/actions/agreements.js":"10","/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/reducers/agreements.js":"11","/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/components/ErrorModal.js":"12","/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/containers/LoginPage.js":"13","/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/containers/HomePage.js":"14","/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/containers/ManageAccountPage.js":"15","/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/components/AccountSettings.js":"16","/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/containers/TrainingAgreementsPage.js":"17","/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/components/AgreementsList.js":"18","/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/components/AgreementDetails.js":"19","/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/components/TrainingSessionModal.js":"20","/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/components/NewTrainingSessionModal.js":"21","/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/components/NewTrainingAgreement.js":"22","/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/components/NewGoalModal.js":"23","/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/components/SignupForm.js":"24","/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/components/GoalModal.js":"25","/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/components/NavBar.js":"26","/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/components/SuccessModal.js":"27","/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/components/ChatFeedNav.js":"28","/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/components/ChatFeed.js":"29","/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/components/ChatUser.js":"30","/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/components/ChatFeedMessages.js":"31"},{"size":3556,"mtime":1611605041301,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":1610644949310,"results":"34","hashOfConfig":"33"},{"size":1662,"mtime":1610650451791,"results":"35","hashOfConfig":"33"},{"size":1235,"mtime":1611605041309,"results":"36","hashOfConfig":"33"},{"size":2011,"mtime":1611607450836,"results":"37","hashOfConfig":"33"},{"size":294,"mtime":1610661362216,"results":"38","hashOfConfig":"33"},{"size":294,"mtime":1611257742739,"results":"39","hashOfConfig":"33"},{"size":591,"mtime":1611257742742,"results":"40","hashOfConfig":"33"},{"size":190,"mtime":1611095734553,"results":"41","hashOfConfig":"33"},{"size":1070,"mtime":1611605041303,"results":"42","hashOfConfig":"33"},{"size":2463,"mtime":1611605041310,"results":"43","hashOfConfig":"33"},{"size":746,"mtime":1610705612261,"results":"44","hashOfConfig":"33"},{"size":5177,"mtime":1611616056252,"results":"45","hashOfConfig":"33"},{"size":1790,"mtime":1611696458394,"results":"46","hashOfConfig":"33"},{"size":1045,"mtime":1611696458395,"results":"47","hashOfConfig":"33"},{"size":13836,"mtime":1611345118505,"results":"48","hashOfConfig":"33"},{"size":1610,"mtime":1611191005313,"results":"49","hashOfConfig":"33"},{"size":4161,"mtime":1611257742740,"results":"50","hashOfConfig":"33"},{"size":13695,"mtime":1611702733380,"results":"51","hashOfConfig":"33"},{"size":12694,"mtime":1611796485143,"results":"52","hashOfConfig":"33"},{"size":12310,"mtime":1611696458391,"results":"53","hashOfConfig":"33"},{"size":10654,"mtime":1611696458391,"results":"54","hashOfConfig":"33"},{"size":6267,"mtime":1611245945758,"results":"55","hashOfConfig":"33"},{"size":12039,"mtime":1611342349881,"results":"56","hashOfConfig":"33"},{"size":6821,"mtime":1611796485143,"results":"57","hashOfConfig":"33"},{"size":1905,"mtime":1611528385541,"results":"58","hashOfConfig":"33"},{"size":763,"mtime":1610945601765,"results":"59","hashOfConfig":"33"},{"size":5240,"mtime":1611858403629,"results":"60","hashOfConfig":"33"},{"size":4917,"mtime":1611797200676,"results":"61","hashOfConfig":"33"},{"size":1958,"mtime":1611855408375,"results":"62","hashOfConfig":"33"},{"size":2422,"mtime":1611858886069,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1aipu25",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/App.js",["135"],"/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/reportWebVitals.js",[],["136","137"],"/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/components/TestForm.js",[],"/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/index.js",["138"],"/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/components/LoginForm.js",[],"/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/components/MainLogo.js",[],"/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/actions/user.js",[],["139","140"],"/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/reducers/user.js",[],"/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/reducers/index.js",[],["141","142"],"/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/actions/agreements.js",[],"/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/reducers/agreements.js",[],"/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/components/ErrorModal.js",[],"/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/containers/LoginPage.js",["143","144"],"/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/containers/HomePage.js",["145","146","147"],"/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/containers/ManageAccountPage.js",[],["148","149"],"/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/components/AccountSettings.js",[],"/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/containers/TrainingAgreementsPage.js",["150"],"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport AgreementsList from '../components/AgreementsList';\nimport AgreementDetails from '../components/AgreementDetails';\nimport NewTrainingAgreement from '../components/NewTrainingAgreement';\n\nconst TrainingAgreementsPage = ({ user, agreements }) => {\n    \n    // STATE HOOKS FOR AGREEMENT DETAILS PAGE\n    const [ activeAgreement, setActiveAgreement ] = useState(null)\n    const [ showNewTrainingAgreement, setShowNewTrainingAgreement ] = useState(false)\n\n    const currentAgreement = () => agreements.find(agreement => agreement.id === activeAgreement)\n    \n    return (\n        <div id='agreements-roster-page' className='d-flex justify-content-stretch'>\n            <AgreementsList \n                userIsTrainer={ user.isTrainer }\n                agreements={ agreements }\n                activeAgreement={ activeAgreement }\n                setActiveAgreement={ setActiveAgreement }\n                showNew={ showNewTrainingAgreement }\n                setShowNew={ setShowNewTrainingAgreement }\n            />\n            { showNewTrainingAgreement ? \n                <NewTrainingAgreement \n                    closeTrainingAgreement={ () => setShowNewTrainingAgreement(false) }\n                /> :\n                <AgreementDetails userIsTrainer={ user.isTrainer } agreement={ currentAgreement() } />}\n        </div>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user,\n        agreements: state.agreements\n    }\n}\n\nexport default connect(mapStateToProps)(TrainingAgreementsPage);",["151","152"],"/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/components/AgreementsList.js",["153"],"import React, { useState, useEffect } from 'react';\n\nconst AgreementsList = ({ userIsTrainer, agreements, activeAgreement, setActiveAgreement, showNew, setShowNew }) => {\n\n    const [ activeAgreements, setActiveAgreements ] = useState([])\n    const [ pendingAgreements, setPendingAgreements ] = useState([])\n\n    useEffect(() => {\n        setActiveAgreements( filterActiveAgreements() )\n        setPendingAgreements( filterPendingAgreements() )\n    }, [ agreements ])\n\n    const filterActiveAgreements = () => {\n        return agreements.filter( agreement => agreement.accepted_agreement )\n    }\n\n    const filterPendingAgreements = () => {\n        return agreements.filter( agreement => agreement.accepted_agreement === null )\n    }\n\n    const handleOnClick = event => {\n        // debugger\n        const selectedID = parseInt(event.target.id)\n        activeAgreement === selectedID ? \n            setActiveAgreement(null) : \n            toggleAgreement(selectedID)\n    }\n\n    const toggleAgreement = id => {\n        setActiveAgreement(id)\n        setShowNew(false)\n    }\n    \n    const handleNewAgreement = event => {\n        setShowNew(!showNew)\n        setActiveAgreement(null)\n    }\n\n    const renderAgreementLinks = ( status ) => {\n        // SET WHETHER TO RENDER ALL PENDING OR ALL ACTIVE AGREEMENTS IN DATASET\n        let agreementArray\n        if ( status === 'ACTIVE' ) agreementArray = activeAgreements\n        else if ( status === 'PENDING' ) agreementArray = pendingAgreements\n        // RENDER NOTHING IF OPTIONS ARE NOT HIT\n        else return []\n        // SET USERTYPE FOR SEARCHING DATASET FOR NAMES\n        const userType = userIsTrainer ? 'client' : 'trainer'\n        // SORT ARRAY ALPHABETICALLY GETTING TO THE USER NAME\n        const sortedArray = agreementArray.sort(( a, b ) => {\n            if ( a[userType].name > b[userType].name ) return 1\n            else if ( a[userType].name < b[userType].name ) return -1\n            else return 0\n        })\n        // MAP THE SORTED ARRAY INTO CLICKABLE LIST ITEMS\n        return sortedArray.map( (agreement, i) => {\n            return <li \n                key={ i } \n                id={ agreement.id } \n                className={ agreement.id === activeAgreement ? 'selected' : null } \n                onClick={ handleOnClick }>\n                        { userIsTrainer ? agreement.client.name : agreement.trainer.name }\n                    </li>\n        })\n    }\n\n    const newAgreementLinkClassName = () => {\n        if ( showNew ) return 'create-new-item new-agreement-link selected'\n        else return 'create-new-item new-agreement-link'\n    }\n\n    const renderActiveAgreements = () => {\n        return (\n            <>\n                <h1 id='agreements-list-title' className='display-4'>\n                    { userIsTrainer === null ? 'Loading...' : userIsTrainer ? 'Clients' : 'Coaches' }\n                </h1>\n                <div className='h-divider' />\n                <ul id='agreements-list'>\n                    { renderAgreementLinks( 'ACTIVE' ) }\n                </ul>  \n            </>\n        )\n    }\n\n    const renderPendingAgreements = () => {\n        return (\n            <>\n                <h1 id='pending-agreements-list-title' className='display-4'>\n                    Pending Agreements\n                </h1>\n                <div className='h-divider' />\n                <ul id='agreements-list'>\n                    { renderAgreementLinks( 'PENDING' ) }\n                </ul>\n            </>\n        )\n    }\n\n    return (\n        <div id='agreements-list-container' className='d-flex flex-column align-items-start'>\n            {/* RENDER EACH LIST CONDITIONALLY */}\n            { activeAgreements.length > 0 ? renderActiveAgreements() : null }\n            { pendingAgreements.length > 0 ? renderPendingAgreements() : null }\n\n            {/* IF THE USER IS NOT A COACH, ALLOW TO ACCESS FORM TO CREATE NEW AGREEMENT */}\n            { userIsTrainer ? null : \n            <h3 onClick={ handleNewAgreement } className={ newAgreementLinkClassName() }>\n                New Training Agreement\n            </h3>}\n        </div>\n    );\n}\n\nexport default AgreementsList;\n",["154","155"],"/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/components/AgreementDetails.js",[],"/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/components/TrainingSessionModal.js",["156"],"/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/components/NewTrainingSessionModal.js",["157"],"/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/components/NewTrainingAgreement.js",["158"],"/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/components/NewGoalModal.js",[],"/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/components/SignupForm.js",[],"/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/components/GoalModal.js",["159"],"/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/components/NavBar.js",[],"/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/components/SuccessModal.js",[],"/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/components/ChatFeedNav.js",["160","161"],"import React, { useState, useEffect, createContext, useRef } from 'react';\n// REACT BOOTSTRAP\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport NavDropdown from 'react-bootstrap/NavDropdown'\nimport Toast from 'react-bootstrap/Toast';\n// COMPONENT DEPENDENCIES\nimport ChatFeed from './ChatFeed';\nimport ChatUser from './ChatUser';\nimport PlaceholderImage from './PlaceholderImage';\n// ACTION CABLE!\nimport actionCable from 'actioncable';\n\nconst CableApp = {}\nCableApp.cable = actionCable.createConsumer('ws://localhost:5000/cable')\nexport const ActionCableContext = createContext()\n\nconst ChatFeedNav = ({ user, agreements }) => {\n\n    const [ activeFeed, setActiveFeed ] = useState({})\n    const [ chatrooms, setChatrooms ] = useState([])\n    const [ showFeed, setShowFeed ] = useState(false)\n    const [ notifications, setNotifications ] = useState([])\n    const notificationsRef = useRef([])\n\n    useEffect(() => {\n        const formattedAgreements = mapAgreementsToChatrooms()\n        setChatrooms([...formattedAgreements])\n    },[ agreements ])\n\n    const userIsTrainer = () => {\n        return user.isTrainer\n    }\n\n    const mapAgreementsToChatrooms = () => {\n        return agreements.map( agreement => {\n            return {\n                id: agreement.id,\n                chatUser: userIsTrainer() ? agreement.client.name : agreement.trainer.name,\n                chatUserImg: userIsTrainer() ? agreement.client.image_url : agreement.trainer.image_url\n            }\n        })\n    }\n\n    const renderDropdownItemsFromState = () => {\n        return chatrooms.map( (room, i) => { \n            return <ChatUser\n                key={ i }\n                event={ () => setAsCurrentFeed(room) }\n                active={ room.id === activeFeed.id }\n                showFeed={ showFeed }\n                agreement={ room }\n                addNewMessageToast={ addNewMessageToast }\n            />\n        })\n    }\n\n    const renderChatfeedFromState = () => {\n        if (!activeFeed.id) return\n        else return (\n            <Nav.Link active={ showFeed } onClick={ toggleChatView }>{ activeFeed.chatUser }</Nav.Link>\n        )\n    }\n\n    const setAsCurrentFeed = room => {\n        if (activeFeed.id === room.id) setActiveFeed({})\n        else setActiveFeed(room)\n        setShowFeed(false)\n    }\n\n    const toggleChatView = e => {\n        setShowFeed(!showFeed)\n    }\n\n    const addNewMessageToast = (chatMessage, agreement) => {\n        const newNotification = {\n            ...chatMessage,\n            chatUser: agreement.chatUser,\n            chatUserImg: agreement.chatUserImg\n        }\n        setNotifications([...notificationsRef.current, newNotification])\n        notificationsRef.current.push(newNotification)\n    }\n\n    const renderToastNotifications = () => {\n        return notifications.map( notification => {\n            return <ToastNotification \n                key={ notification.id }\n                notification={ notification } \n                removeToast={ removeToast }\n            />\n        })\n    }\n\n    const removeToast = id => {\n        const newNotifications = notificationsRef.current.filter(ref => ref.id !== id)\n        notificationsRef.current = newNotifications\n        setNotifications([...newNotifications])\n    }\n\n    return (\n        <ActionCableContext.Provider value={ CableApp.cable }>\n           <Navbar id='chatfeed-nav'fixed='bottom' variant='dark'>\n                <Navbar.Collapse id='chatfeed-nav-items'className=\"justify-content-end\">\n                    <Nav>\n                        { renderChatfeedFromState() }\n                        <NavDropdown title={ user.isTrainer ? 'Clients' : 'Coaches' } id=\"nav-dropdown\" drop='up' alignRight>\n                            { renderDropdownItemsFromState() }\n                        </NavDropdown>\n                    </Nav>\n                </Navbar.Collapse>\n                { showFeed ? <ChatFeed \n                    userId={ user.id } \n                    feed={ activeFeed } \n                    showFeed={ showFeed }\n            /> : null }\n            </Navbar>\n            <div \n                id='toast-notification-container' \n                className='d-flex flex-column-reverse align-items-end justify-content-end'\n            >\n                { renderToastNotifications() }\n            </div>\n        </ActionCableContext.Provider>\n        \n    );\n}\n\nconst ToastNotification = ({ notification, removeToast }) => {\n\n    const [ show, setShow ] = useState(true)\n    const { content, id, chatUser, chatUserImg } = notification\n\n    const closeToastNotification = () => {\n        setShow(false)\n        removeToast(id)\n    }\n\n    return (\n        <Toast \n            onClose={ closeToastNotification }\n            show={ show }\n            delay={ 5000 }\n            autohide\n            style={{ minWidth: '220px', flexBasis: 'auto' }}\n        >\n            <Toast.Header>\n                <img src={ chatUserImg } className=\"rounded mr-2\" alt=\"\" />\n                <strong className=\"mr-auto\">{ chatUser }</strong>\n                <small>New Message</small>\n            </Toast.Header>\n            <Toast.Body>{ content }</Toast.Body>\n        </Toast>\n    )\n}\n\nexport default ChatFeedNav;\n","/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/components/ChatFeed.js",["162"],"/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/components/ChatUser.js",["163","164"],"/Users/alec/Flatiron/phase-5-project/quick-trainer-frontend/src/components/ChatFeedMessages.js",[],{"ruleId":"165","severity":1,"message":"166","line":23,"column":5,"nodeType":"167","endLine":23,"endColumn":7,"suggestions":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":30},{"ruleId":"169","replacedBy":"177"},{"ruleId":"171","replacedBy":"178"},{"ruleId":"169","replacedBy":"179"},{"ruleId":"171","replacedBy":"180"},{"ruleId":"173","severity":1,"message":"181","line":8,"column":8,"nodeType":"175","messageId":"176","endLine":8,"endColumn":18},{"ruleId":"165","severity":1,"message":"182","line":30,"column":7,"nodeType":"167","endLine":30,"endColumn":9,"suggestions":"183"},{"ruleId":"173","severity":1,"message":"184","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":25},{"ruleId":"173","severity":1,"message":"185","line":1,"column":27,"nodeType":"175","messageId":"176","endLine":1,"endColumn":36},{"ruleId":"173","severity":1,"message":"186","line":5,"column":16,"nodeType":"175","messageId":"176","endLine":5,"endColumn":26},{"ruleId":"169","replacedBy":"187"},{"ruleId":"171","replacedBy":"188"},{"ruleId":"173","severity":1,"message":"185","line":1,"column":27,"nodeType":"175","messageId":"176","endLine":1,"endColumn":36},{"ruleId":"169","replacedBy":"189"},{"ruleId":"171","replacedBy":"190"},{"ruleId":"165","severity":1,"message":"191","line":11,"column":8,"nodeType":"167","endLine":11,"endColumn":22,"suggestions":"192"},{"ruleId":"169","replacedBy":"193"},{"ruleId":"171","replacedBy":"194"},{"ruleId":"165","severity":1,"message":"195","line":29,"column":7,"nodeType":"167","endLine":29,"endColumn":11,"suggestions":"196"},{"ruleId":"165","severity":1,"message":"197","line":223,"column":8,"nodeType":"167","endLine":223,"endColumn":23,"suggestions":"198"},{"ruleId":"165","severity":1,"message":"199","line":33,"column":8,"nodeType":"167","endLine":33,"endColumn":10,"suggestions":"200"},{"ruleId":"165","severity":1,"message":"201","line":23,"column":8,"nodeType":"167","endLine":23,"endColumn":21,"suggestions":"202"},{"ruleId":"173","severity":1,"message":"203","line":10,"column":8,"nodeType":"175","messageId":"176","endLine":10,"endColumn":24},{"ruleId":"165","severity":1,"message":"204","line":29,"column":7,"nodeType":"167","endLine":29,"endColumn":21,"suggestions":"205"},{"ruleId":"165","severity":1,"message":"206","line":38,"column":8,"nodeType":"167","endLine":38,"endColumn":14,"suggestions":"207"},{"ruleId":"173","severity":1,"message":"184","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":25},{"ruleId":"165","severity":1,"message":"208","line":35,"column":8,"nodeType":"167","endLine":35,"endColumn":10,"suggestions":"209"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchUserToStore' and 'user'. Either include them or remove the dependency array.","ArrayExpression",["210"],"no-native-reassign",["211"],"no-negated-in-lhs",["212"],"no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar",["211"],["212"],["211"],["212"],"'ErrorModal' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["213"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'useHistory' is defined but never used.",["211"],["212"],["211"],["212"],"React Hook useEffect has missing dependencies: 'filterActiveAgreements' and 'filterPendingAgreements'. Either include them or remove the dependency array.",["214"],["211"],["212"],"React Hook useEffect has a missing dependency: 'fetchTrainingSessionData'. Either include it or remove the dependency array.",["215"],"React Hook useEffect has missing dependencies: 'index' and 'updateWorkoutItem'. Either include them or remove the dependency array. If 'updateWorkoutItem' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["216"],"React Hook useEffect has a missing dependency: 'fetchAllCoaches'. Either include it or remove the dependency array.",["217"],"React Hook useEffect has a missing dependency: 'findGoalById'. Either include it or remove the dependency array.",["218"],"'PlaceholderImage' is defined but never used.","React Hook useEffect has a missing dependency: 'mapAgreementsToChatrooms'. Either include it or remove the dependency array.",["219"],"React Hook useEffect has a missing dependency: 'cable.subscriptions'. Either include it or remove the dependency array.",["220"],"React Hook useEffect has missing dependencies: 'addChatMessageToAgreement', 'addNewMessageToast', 'agreement', and 'cable.subscriptions'. Either include them or remove the dependency array. If 'addNewMessageToast' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["221"],{"desc":"222","fix":"223"},"no-global-assign","no-unsafe-negation",{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},"Update the dependencies array to be: [fetchUserToStore, user]",{"range":"242","text":"243"},"Update the dependencies array to be: [history]",{"range":"244","text":"245"},"Update the dependencies array to be: [agreements, filterActiveAgreements, filterPendingAgreements]",{"range":"246","text":"247"},"Update the dependencies array to be: [fetchTrainingSessionData, id]",{"range":"248","text":"249"},"Update the dependencies array to be: [index, updateWorkoutItem, workoutItem]",{"range":"250","text":"251"},"Update the dependencies array to be: [fetchAllCoaches]",{"range":"252","text":"253"},"Update the dependencies array to be: [id, goals, findGoalById]",{"range":"254","text":"255"},"Update the dependencies array to be: [agreements, mapAgreementsToChatrooms]",{"range":"256","text":"257"},"Update the dependencies array to be: [cable.subscriptions, feed]",{"range":"258","text":"259"},"Update the dependencies array to be: [addChatMessageToAgreement, addNewMessageToast, agreement, cable.subscriptions]",{"range":"260","text":"261"},[998,1000],"[fetchUserToStore, user]",[1067,1069],"[history]",[452,466],"[agreements, filterActiveAgreements, filterPendingAgreements]",[1123,1127],"[fetchTrainingSessionData, id]",[8530,8545],"[index, updateWorkoutItem, workoutItem]",[1262,1264],"[fetchAllCoaches]",[900,913],"[id, goals, findGoalById]",[1072,1086],"[agreements, mapAgreementsToChatrooms]",[1205,1211],"[cable.subscriptions, feed]",[1331,1333],"[addChatMessageToAgreement, addNewMessageToast, agreement, cable.subscriptions]"]