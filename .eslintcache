[{"/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/reportWebVitals.js":"1","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/containers/HomePage.js":"2","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/containers/ManageAccountPage.js":"3","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/components/ChatFeed.js":"4","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/components/AgreementsList.js":"5","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/components/NewGoalModal.js":"6","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/containers/TrainingAgreementsPage.js":"7","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/components/ChatFeedNav.js":"8","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/actions/user.js":"9","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/reducers/agreements.js":"10","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/components/LoginForm.js":"11","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/components/NewTrainingSessionModal.js":"12","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/containers/LoginPage.js":"13","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/index.js":"14","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/components/NavBar.js":"15","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/actions/agreements.js":"16","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/components/TrainingSessionModal.js":"17","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/reducers/user.js":"18","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/App.js":"19","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/components/ChatFeedMessages.js":"20"},{"size":362,"mtime":1610644949310,"results":"21","hashOfConfig":"22"},{"size":1798,"mtime":1612905854290,"results":"23","hashOfConfig":"22"},{"size":1045,"mtime":1611696458395,"results":"24","hashOfConfig":"22"},{"size":4917,"mtime":1611861036161,"results":"25","hashOfConfig":"22"},{"size":4187,"mtime":1611366612421,"results":"26","hashOfConfig":"22"},{"size":6293,"mtime":1612910282695,"results":"27","hashOfConfig":"22"},{"size":1610,"mtime":1611191005313,"results":"28","hashOfConfig":"22"},{"size":5262,"mtime":1612911741875,"results":"29","hashOfConfig":"22"},{"size":294,"mtime":1611257742739,"results":"30","hashOfConfig":"22"},{"size":2463,"mtime":1611605041310,"results":"31","hashOfConfig":"22"},{"size":2011,"mtime":1611616056251,"results":"32","hashOfConfig":"22"},{"size":12332,"mtime":1612910276136,"results":"33","hashOfConfig":"22"},{"size":5199,"mtime":1612910276136,"results":"34","hashOfConfig":"22"},{"size":963,"mtime":1612911106244,"results":"35","hashOfConfig":"22"},{"size":1905,"mtime":1611528385541,"results":"36","hashOfConfig":"22"},{"size":1070,"mtime":1611605041303,"results":"37","hashOfConfig":"22"},{"size":12738,"mtime":1612910276136,"results":"38","hashOfConfig":"22"},{"size":591,"mtime":1611257742742,"results":"39","hashOfConfig":"22"},{"size":3638,"mtime":1612910163283,"results":"40","hashOfConfig":"22"},{"size":2422,"mtime":1611861036162,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"2hgwbj",{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/reportWebVitals.js",[],["95","96"],"/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/containers/HomePage.js",["97","98","99","100"],"import React, { useState, useEffect } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Image from 'react-bootstrap/Image'\nimport { connect } from 'react-redux';\nimport { Link, useHistory } from \"react-router-dom\";\nimport PlaceholderImage from '../components/PlaceholderImage';\n\nconst HomePage = ({ user, agreements }) => {\n\n    // const [ notifications, setNotifications ] = useState([])\n\n    // useEffect(() => {\n    //     // CONVERT AGREEMENTS INTO ARRAY OF NOTIFICATION OBJECTS, ADD TO NOTIFICATION STATE OBJECT\n    // })\n\n    // const reduceAgreementToNotification = agreement => {\n    //     case () {\n\n    //     }\n    // }\n\n    return (\n        <Container id='home-page' className='d-flex align-items-center flex-column'>\n            {   !!user.imageUrl ? \n                <Image className='shadow homepage-image' src={ user.imageUrl } /> : \n                <PlaceholderImage size='8rem' /> \n            }\n            <h1 className='.welcome-message'>{ `Welcome, ${ user.name }!` }</h1>\n            {/* <Container className='d-flex justify-content-center'>\n                <div className='nav-link-container d-flex justify-content-end'>\n                    <Link to='/manage-account'>User Settings</Link>\n                </div>\n                <div className='v-divider' />\n                <div className='nav-link-container d-flex justify-content-start'>\n                    <Link to='/training-agreements'>\n                        { user.isTrainer ? 'View Roster' : 'View Coaches' }\n                    </Link>\n                </div>\n            </Container> */}\n        </Container>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user,\n        agreements: state.agreements\n    }\n}\n\nexport default connect(mapStateToProps)(HomePage);\n",["101","102"],"/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/containers/ManageAccountPage.js",[],["103","104"],"/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/components/ChatFeed.js",["105"],"/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/components/AgreementsList.js",["106"],"/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/components/NewGoalModal.js",[],"/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/containers/TrainingAgreementsPage.js",["107"],"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport AgreementsList from '../components/AgreementsList';\nimport AgreementDetails from '../components/AgreementDetails';\nimport NewTrainingAgreement from '../components/NewTrainingAgreement';\n\nconst TrainingAgreementsPage = ({ user, agreements }) => {\n    \n    // STATE HOOKS FOR AGREEMENT DETAILS PAGE\n    const [ activeAgreement, setActiveAgreement ] = useState(null)\n    const [ showNewTrainingAgreement, setShowNewTrainingAgreement ] = useState(false)\n\n    const currentAgreement = () => agreements.find(agreement => agreement.id === activeAgreement)\n    \n    return (\n        <div id='agreements-roster-page' className='d-flex justify-content-stretch'>\n            <AgreementsList \n                userIsTrainer={ user.isTrainer }\n                agreements={ agreements }\n                activeAgreement={ activeAgreement }\n                setActiveAgreement={ setActiveAgreement }\n                showNew={ showNewTrainingAgreement }\n                setShowNew={ setShowNewTrainingAgreement }\n            />\n            { showNewTrainingAgreement ? \n                <NewTrainingAgreement \n                    closeTrainingAgreement={ () => setShowNewTrainingAgreement(false) }\n                /> :\n                <AgreementDetails userIsTrainer={ user.isTrainer } agreement={ currentAgreement() } />}\n        </div>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user,\n        agreements: state.agreements\n    }\n}\n\nexport default connect(mapStateToProps)(TrainingAgreementsPage);",["108","109"],"/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/components/ChatFeedNav.js",["110","111"],"import React, { useState, useEffect, createContext, useRef } from 'react';\n// REACT BOOTSTRAP\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport NavDropdown from 'react-bootstrap/NavDropdown'\nimport Toast from 'react-bootstrap/Toast';\n// COMPONENT DEPENDENCIES\nimport ChatFeed from './ChatFeed';\nimport ChatUser from './ChatUser';\nimport PlaceholderImage from './PlaceholderImage';\n// ACTION CABLE!\nimport actionCable from 'actioncable';\n\nconst CableApp = {}\nCableApp.cable = actionCable.createConsumer('wss://quick-trainer-backend.herokuapp.com/cable')\nexport const ActionCableContext = createContext()\n\nconst ChatFeedNav = ({ user, agreements }) => {\n\n    const [ activeFeed, setActiveFeed ] = useState({})\n    const [ chatrooms, setChatrooms ] = useState([])\n    const [ showFeed, setShowFeed ] = useState(false)\n    const [ notifications, setNotifications ] = useState([])\n    const notificationsRef = useRef([])\n\n    useEffect(() => {\n        const formattedAgreements = mapAgreementsToChatrooms()\n        setChatrooms([...formattedAgreements])\n    },[ agreements ])\n\n    const userIsTrainer = () => {\n        return user.isTrainer\n    }\n\n    const mapAgreementsToChatrooms = () => {\n        return agreements.map( agreement => {\n            return {\n                id: agreement.id,\n                chatUser: userIsTrainer() ? agreement.client.name : agreement.trainer.name,\n                chatUserImg: userIsTrainer() ? agreement.client.image_url : agreement.trainer.image_url\n            }\n        })\n    }\n\n    const renderDropdownItemsFromState = () => {\n        return chatrooms.map( (room, i) => { \n            return <ChatUser\n                key={ i }\n                event={ () => setAsCurrentFeed(room) }\n                active={ room.id === activeFeed.id }\n                showFeed={ showFeed }\n                agreement={ room }\n                addNewMessageToast={ addNewMessageToast }\n            />\n        })\n    }\n\n    const renderChatfeedFromState = () => {\n        if (!activeFeed.id) return\n        else return (\n            <Nav.Link active={ showFeed } onClick={ toggleChatView }>{ activeFeed.chatUser }</Nav.Link>\n        )\n    }\n\n    const setAsCurrentFeed = room => {\n        if (activeFeed.id === room.id) setActiveFeed({})\n        else setActiveFeed(room)\n        setShowFeed(false)\n    }\n\n    const toggleChatView = e => {\n        setShowFeed(!showFeed)\n    }\n\n    const addNewMessageToast = (chatMessage, agreement) => {\n        const newNotification = {\n            ...chatMessage,\n            chatUser: agreement.chatUser,\n            chatUserImg: agreement.chatUserImg\n        }\n        setNotifications([...notificationsRef.current, newNotification])\n        notificationsRef.current.push(newNotification)\n    }\n\n    const renderToastNotifications = () => {\n        return notifications.map( notification => {\n            return <ToastNotification \n                key={ notification.id }\n                notification={ notification } \n                removeToast={ removeToast }\n            />\n        })\n    }\n\n    const removeToast = id => {\n        const newNotifications = notificationsRef.current.filter(ref => ref.id !== id)\n        notificationsRef.current = newNotifications\n        setNotifications([...newNotifications])\n    }\n\n    return (\n        <ActionCableContext.Provider value={ CableApp.cable }>\n           <Navbar id='chatfeed-nav'fixed='bottom' variant='dark'>\n                <Navbar.Collapse id='chatfeed-nav-items'className=\"justify-content-end\">\n                    <Nav>\n                        { renderChatfeedFromState() }\n                        <NavDropdown title={ user.isTrainer ? 'Clients' : 'Coaches' } id=\"nav-dropdown\" drop='up' alignRight>\n                            { renderDropdownItemsFromState() }\n                        </NavDropdown>\n                    </Nav>\n                </Navbar.Collapse>\n                { showFeed ? <ChatFeed \n                    userId={ user.id } \n                    feed={ activeFeed } \n                    showFeed={ showFeed }\n            /> : null }\n            </Navbar>\n            <div \n                id='toast-notification-container' \n                className='d-flex flex-column-reverse align-items-end justify-content-end'\n            >\n                { renderToastNotifications() }\n            </div>\n        </ActionCableContext.Provider>\n        \n    );\n}\n\nconst ToastNotification = ({ notification, removeToast }) => {\n\n    const [ show, setShow ] = useState(true)\n    const { content, id, chatUser, chatUserImg } = notification\n\n    const closeToastNotification = () => {\n        setShow(false)\n        removeToast(id)\n    }\n\n    return (\n        <Toast \n            onClose={ closeToastNotification }\n            show={ show }\n            delay={ 5000 }\n            autohide\n            style={{ minWidth: '220px', flexBasis: 'auto' }}\n        >\n            <Toast.Header>\n                <img src={ chatUserImg } className=\"rounded mr-2\" alt=\"\" />\n                <strong className=\"mr-auto\">{ chatUser }</strong>\n                <small>New Message</small>\n            </Toast.Header>\n            <Toast.Body>{ content }</Toast.Body>\n        </Toast>\n    )\n}\n\nexport default ChatFeedNav;\n","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/actions/user.js",[],["112","113"],"/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/reducers/agreements.js",[],["114","115"],"/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/components/LoginForm.js",[],"/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/components/NewTrainingSessionModal.js",["116"],"/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/containers/LoginPage.js",["117","118"],"import React, { useState, useEffect } from 'react';\n// BOOTSTRAP COMPONENTS\nimport Container from 'react-bootstrap/Container';\n// DEPENDENT COMPONENTS\nimport MainLogo from '../components/MainLogo';\nimport LoginForm from '../components/LoginForm';\nimport SignupForm from '../components/SignupForm';\nimport ErrorModal from '../components/ErrorModal';\n// REDUX ACTIONS AND CONNECT\nimport { loginUser } from '../actions/user';\nimport { addAgreements } from '../actions/agreements';\nimport { connect } from 'react-redux';\n// REACT ROUTER\nimport { useHistory } from \"react-router-dom\";\n\nconst LoginPage = ({ loginUser, addAgreements }) => {\n\n    // STATE HOOKS\n    const [ name, setName ] = useState('')\n    const [ password, setPassword ] = useState('')\n    const [ errors, setErrors ] = useState({})\n    const [ showSignup, setShowSignup ] = useState(false)\n    const [ disabledFields, setDisabledFields ] = useState(false)  \n\n    // USE HISTORY HOOK\n    const history = useHistory()\n    \n    useEffect(()=>{\n        if (!!localStorage.token) history.push('/home')\n    },[])\n\n    // LOGIN EVENT LISTENERS\n    const handleNameChange = event => {\n        setName(event.target.value)\n        resetErrors('name')\n    }\n\n    const handlePasswordChange = event => {\n        setPassword(event.target.value)\n        resetErrors('password')\n    }\n\n    // HELPER METHOD TO EVENT HANDLERS\n    const resetErrors = field => {\n        setErrors({\n            ...errors,\n            [field]: null\n        })\n    }\n\n    const handleLoginSubmit = event => {\n        event.preventDefault()\n        setDisabledFields(true)\n        fetchUser()\n    }\n\n    // FETCH REQUEST TO LOGIN USER\n    const fetchUser = () => {\n        console.log('initiating login fetch')\n        const url = 'https://quick-trainer-backend.herokuapp.com/login'\n        const params = loginParams()\n        fetch(url, params)\n          .then(resp => resp.json())\n          .then(handleUserFetch)\n          .then(navigateToHomePage)\n    }\n\n    const handleUserFetch = json => {\n        // if we receive errors back instead of a user, render an error message, otherwise update the store\n        !!json.errors ? handleFetchErrors(json.errors) : sendUserToStore(json)\n        setDisabledFields(false)\n        // return status of login\n        return !json.errors\n    }\n\n    // HELPER METHOD TO handleUserFetch\n    const handleFetchErrors = jsonErrors => {\n        if (!!jsonErrors.name) {\n            setErrors({ ...errors, name: jsonErrors.name })\n        } else if (!!jsonErrors.password) {\n            setErrors({ ...errors, password: jsonErrors.password })\n        }\n    }\n\n    // REROUTING AFTER LOGIN\n    const navigateToHomePage = loginSuccessful => {\n        if ( loginSuccessful ) history.push('/home')\n    }\n\n    // LOGIN HELPER METHODS\n    const loginParams = () => {\n        return {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          body: JSON.stringify({\n            name,\n            password\n          })\n        }\n    }\n\n    const sendUserToStore = json => {\n        // Handles all saving of user data in store & in local storage\n        localStorage.setItem('token', json.token)\n        const user = json.user.data.attributes\n        const agreements = formatAgreementsFromJson(json)\n        const userPayload = {\n            id: parseInt(json.user.data.id),\n            name: user.name,\n            isTrainer: user.account_type === 'trainer',\n            specialty: user.specialty,\n            credentials: user.credentials,\n            dateOfBirth: user.date_of_birth,\n            height: user.height,\n            weight: user.weight,\n            bio: user.bio,\n            imageUrl: user.image_url\n        }\n        loginUser( userPayload )\n        addAgreements( agreements )\n    }\n\n    const formatAgreementsFromJson = json => {\n        return json.user.data.attributes.agreements.map( agreement => {\n            return {\n                ...agreement.data.attributes,\n                id: parseInt(agreement.data.id)\n            }\n        })\n    }\n\n    return (\n        <Container id='login-page' className='d-flex align-items-center flex-column'>\n            <MainLogo />\n            {/* CONDITIONALLY RENDER ONE OF TWO FORMS */}\n            { showSignup ? \n                <SignupForm\n                    setShowSignup={ setShowSignup }\n                    sendUserToStore={ sendUserToStore }\n                    navigateToHomePage={ navigateToHomePage }\n                /> : <LoginForm \n                    changeName={ handleNameChange } \n                    changePassword={ handlePasswordChange }\n                    handleLoginSubmit={ handleLoginSubmit }\n                    setShowSignup={ setShowSignup }\n                    errors={ errors }\n                    disabledFields={ disabledFields }\n                /> }\n        </Container>\n    );\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        loginUser: ( userObject ) => dispatch(loginUser(userObject)),\n        addAgreements: ( clients ) => dispatch(addAgreements(clients))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(LoginPage);\n",["119","120"],"/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/index.js",["121"],"/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/components/NavBar.js",[],"/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/actions/agreements.js",[],"/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/components/TrainingSessionModal.js",["122"],"/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/reducers/user.js",[],["123","124"],"/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/App.js",["125"],"import './App.css';\nimport React, { useEffect } from 'react';\n// IMPORT COMPONENT DEPENDENCIES\nimport NavBar from './components/NavBar';\n// ADD PAGE CONTAINERS FOR UNIQUE ROUTES\nimport ChatFeedNav from './components/ChatFeedNav';\nimport LoginPage from './containers/LoginPage';\nimport HomePage from './containers/HomePage';\nimport ManageAccountPage from './containers/ManageAccountPage';\nimport TrainingAgreementsPage from './containers/TrainingAgreementsPage';\n// REDUX AND REDUX ACTIONS\nimport { connect } from 'react-redux';\nimport { loginUser, logoutUser } from './actions/user';\nimport { addAgreements } from './actions/agreements';\n// REACT ROUTER\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\n\nfunction App({ user, agreements, loginUser, logoutUser, addAgreements }) {\n\n  useEffect(() => {\n    // on page load, compare token to store, fetch the user information if necessary\n    if ( localStorage.getItem('token') && user && !user.name) fetchUserToStore()\n  },[])\n\n  const fetchUserToStore = () => {\n    // SEND GET REQUEST TO GET USER INFORMATION\n    const url = `https://quick-trainer-backend.herokuapp.com/get-user`\n    const params = getUserParams()\n    fetch(url, params)\n      .then(resp => resp.json())\n      .then(sendUserToStore)\n  }\n\n  // ON PAGE REFRESH, A USER WILL RE-FETCH THEIR USER INFORMATION VIA\n  // THE WEB TOKEN SAVED ON LOCAL STORAGE\n\n  const sendUserToStore = (json) => {\n    // Handles all saving of user data in store\n    const user = json.user.data.attributes\n    const agreements = formatAgreementsFromJson(json)\n    const userPayload = {\n      id: parseInt(json.user.data.id),\n      name: user.name,\n      isTrainer: user.account_type === 'trainer',\n      specialty: user.specialty,\n      credentials: user.credentials,\n      dateOfBirth: user.date_of_birth,\n      height: user.height,\n      weight: user.weight,\n      bio: user.bio,\n      imageUrl: user.image_url\n    }\n    loginUser( userPayload )\n    addAgreements( agreements )\n  }\n\n  const formatAgreementsFromJson = json => {\n    // debugger\n    return json.user.data.attributes.agreements.map( agreement => {\n        return {\n            ...agreement.data.attributes,\n            id: parseInt(agreement.data.id)\n        }\n    })\n  }\n\n  const getUserParams = () => {\n    return {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization' : `Bearer ${ localStorage.getItem('token') }`\n      }\n    }\n  }\n\n  const loggedIn = () => {\n    return !!user.name\n  }\n\n  return (\n    <Router>\n      { loggedIn() ? <NavBar logoutUser={ logoutUser }/> : null }\n      <div className=\"App d-flex flex-column align-items-around\">\n        <Route exact path='/' component={ LoginPage } />\n        <Route exact path='/home' component={ HomePage } />\n        <Route exact path='/manage-account' component={ ManageAccountPage } />\n        <Route exact path='/training-agreements' component={ TrainingAgreementsPage } />\n        { localStorage.getItem('token') ? null : <Redirect to='/' /> }\n      </div>\n      <div id='bg-img-overlay' />\n      <div id='bg-img' />\n      { loggedIn() ? <ChatFeedNav user={ user } agreements={ agreements }/> : null }\n    </Router>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    agreements: state.agreements\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      loginUser: ( userObject ) => dispatch(loginUser(userObject)),\n      logoutUser: () => dispatch(logoutUser()),\n      addAgreements: ( clients ) => dispatch(addAgreements(clients))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","/Users/alec/Coding/Flatiron/phase-5-project/quick-trainer-frontend/src/components/ChatFeedMessages.js",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":25},{"ruleId":"130","severity":1,"message":"134","line":1,"column":27,"nodeType":"132","messageId":"133","endLine":1,"endColumn":36},{"ruleId":"130","severity":1,"message":"135","line":5,"column":10,"nodeType":"132","messageId":"133","endLine":5,"endColumn":14},{"ruleId":"130","severity":1,"message":"136","line":5,"column":16,"nodeType":"132","messageId":"133","endLine":5,"endColumn":26},{"ruleId":"126","replacedBy":"137"},{"ruleId":"128","replacedBy":"138"},{"ruleId":"126","replacedBy":"139"},{"ruleId":"128","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":38,"column":8,"nodeType":"143","endLine":38,"endColumn":14,"suggestions":"144"},{"ruleId":"141","severity":1,"message":"145","line":11,"column":8,"nodeType":"143","endLine":11,"endColumn":22,"suggestions":"146"},{"ruleId":"130","severity":1,"message":"134","line":1,"column":27,"nodeType":"132","messageId":"133","endLine":1,"endColumn":36},{"ruleId":"126","replacedBy":"147"},{"ruleId":"128","replacedBy":"148"},{"ruleId":"130","severity":1,"message":"149","line":10,"column":8,"nodeType":"132","messageId":"133","endLine":10,"endColumn":24},{"ruleId":"141","severity":1,"message":"150","line":29,"column":7,"nodeType":"143","endLine":29,"endColumn":21,"suggestions":"151"},{"ruleId":"126","replacedBy":"152"},{"ruleId":"128","replacedBy":"153"},{"ruleId":"126","replacedBy":"154"},{"ruleId":"128","replacedBy":"155"},{"ruleId":"141","severity":1,"message":"156","line":223,"column":8,"nodeType":"143","endLine":223,"endColumn":23,"suggestions":"157"},{"ruleId":"130","severity":1,"message":"158","line":8,"column":8,"nodeType":"132","messageId":"133","endLine":8,"endColumn":18},{"ruleId":"141","severity":1,"message":"159","line":30,"column":7,"nodeType":"143","endLine":30,"endColumn":9,"suggestions":"160"},{"ruleId":"126","replacedBy":"161"},{"ruleId":"128","replacedBy":"162"},{"ruleId":"130","severity":1,"message":"163","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":30},{"ruleId":"141","severity":1,"message":"164","line":29,"column":7,"nodeType":"143","endLine":29,"endColumn":11,"suggestions":"165"},{"ruleId":"126","replacedBy":"166"},{"ruleId":"128","replacedBy":"167"},{"ruleId":"141","severity":1,"message":"168","line":23,"column":5,"nodeType":"143","endLine":23,"endColumn":7,"suggestions":"169"},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Link' is defined but never used.","'useHistory' is defined but never used.",["170"],["171"],["170"],["171"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cable.subscriptions'. Either include it or remove the dependency array.","ArrayExpression",["172"],"React Hook useEffect has missing dependencies: 'filterActiveAgreements' and 'filterPendingAgreements'. Either include them or remove the dependency array.",["173"],["170"],["171"],"'PlaceholderImage' is defined but never used.","React Hook useEffect has a missing dependency: 'mapAgreementsToChatrooms'. Either include it or remove the dependency array.",["174"],["170"],["171"],["170"],["171"],"React Hook useEffect has missing dependencies: 'index' and 'updateWorkoutItem'. Either include them or remove the dependency array. If 'updateWorkoutItem' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["175"],"'ErrorModal' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["176"],["170"],["171"],"'createContext' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchTrainingSessionData'. Either include it or remove the dependency array.",["177"],["170"],["171"],"React Hook useEffect has missing dependencies: 'fetchUserToStore' and 'user'. Either include them or remove the dependency array.",["178"],"no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},"Update the dependencies array to be: [cable.subscriptions, feed]",{"range":"193","text":"194"},"Update the dependencies array to be: [agreements, filterActiveAgreements, filterPendingAgreements]",{"range":"195","text":"196"},"Update the dependencies array to be: [agreements, mapAgreementsToChatrooms]",{"range":"197","text":"198"},"Update the dependencies array to be: [index, updateWorkoutItem, workoutItem]",{"range":"199","text":"200"},"Update the dependencies array to be: [history]",{"range":"201","text":"202"},"Update the dependencies array to be: [fetchTrainingSessionData, id]",{"range":"203","text":"204"},"Update the dependencies array to be: [fetchUserToStore, user]",{"range":"205","text":"206"},[1205,1211],"[cable.subscriptions, feed]",[452,466],"[agreements, filterActiveAgreements, filterPendingAgreements]",[1094,1108],"[agreements, mapAgreementsToChatrooms]",[8552,8567],"[index, updateWorkoutItem, workoutItem]",[1067,1069],"[history]",[1123,1127],"[fetchTrainingSessionData, id]",[998,1000],"[fetchUserToStore, user]"]